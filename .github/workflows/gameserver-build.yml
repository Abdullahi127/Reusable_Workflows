name: Build

on:
  workflow_call:

jobs:
  check-diff:
    runs-on: ubuntu-latest
    steps:
      - name: checkout dev branch.
        uses: actions/checkout@v3
        with:
          ref: dev
          fetch-depth: 0

      - name: check core.
        run: git diff --quiet ${{github.event.before}} ${{github.event.after}} core/ && (echo "core-changed=false" >> $GITHUB_ENV ) || (echo "core-changed=true" >> $GITHUB_ENV)

      - name: check adp.
        run: git diff --quiet ${{github.event.before}} ${{github.event.after}} adp/ && (echo "adp-changed=false" >> $GITHUB_ENV ) || (echo "adp-changed=true" >> $GITHUB_ENV)

      - name: check dp.
        run: git diff --quiet ${{github.event.before}} ${{github.event.after}} dp/ && (echo "dp-changed=false" >> $GITHUB_ENV ) || (echo "dp-changed=true" >> $GITHUB_ENV)

      - name: check oc.
        run: git diff --quiet ${{github.event.before}} ${{github.event.after}} oc/ && (echo "oc-changed=false" >> $GITHUB_ENV ) || (echo "oc-changed=true" >> $GITHUB_ENV)

      - name: check sim.
        run: git diff --quiet ${{github.event.before}} ${{github.event.after}} sim/ && (echo "sim-changed=false" >> $GITHUB_ENV ) || (echo "sim-changed=true" >> $GITHUB_ENV)

    outputs:
      core-changed: ${{ env.core-changed }}
      adp-changed: ${{ env.adp-changed }}
      dp-changed: ${{ env.dp-changed }}
      oc-changed: ${{ env.oc-changed }}
      sim-changed: ${{ env.sim-changed }}

  setup:
    needs: [check-diff]
    runs-on: ubuntu-latest
    steps:
      - name: checkout version repo
        uses: actions/checkout@v3
        with:
          ref: version
          fetch-depth: 0

      #---- Get current versions.
      - uses: Abdullahi127/Custom_Actions/.github/actions/jsonReader@main
        id: current-core-version
        with:
          path: "./versions.json"
          key: "core"

      - run: echo "current-core-version=${{ steps.current-core-version.outputs.value }}" >> $GITHUB_ENV

      - uses: Abdullahi127/Custom_Actions/.github/actions/jsonReader@main
        id: current-adp-version
        with:
          path: "./versions.json"
          key: "adp"

      - run: echo "current-adp-version=${{ steps.current-adp-version.outputs.value }}" >> $GITHUB_ENV

      - uses: Abdullahi127/Custom_Actions/.github/actions/jsonReader@main
        id: current-dp-version
        with:
          path: "./versions.json"
          key: "dp"

      - run: echo "current-dp-version=${{ steps.current-dp-version.outputs.value }}" >> $GITHUB_ENV

      - uses: Abdullahi127/Custom_Actions/.github/actions/jsonReader@main
        id: current-oc-version
        with:
          path: "./versions.json"
          key: "oc"

      - run: echo "current-oc-version=${{ steps.current-oc-version.outputs.value }}" >> $GITHUB_ENV

      - uses: Abdullahi127/Custom_Actions/.github/actions/jsonReader@main
        id: current-sim-version
        with:
          path: "./versions.json"
          key: "sim"

      - run: echo "current-sim-version=${{ steps.current-sim-version.outputs.value }}" >> $GITHUB_ENV

      #---- TODO Get next versions.

    outputs:
      current-core-version: ${{ env.current-core-version }}
      current-adp-version: ${{ env.current-adp-version }}
      current-dp-version: ${{ env.current-dp-version }}
      current-oc-version: ${{ env.current-oc-version }}
      current-sim-version: ${{ env.current-sim-version }}
      # next-core-version: ${{ env.next-core-version }}
      # next-adp-version: ${{ env.next-adp-version }}
      # next-dp-version: ${{ env.next-dp-version }}
      # next-oc-version: ${{ env.next-oc-version }}
      # next-sim-version: ${{ env.next-sim-version }}

  build:
    needs: [setup, check-diff]
    runs-on: ubuntu-latest
    steps:
      - name: checkout dev repo
        uses: actions/checkout@v3
        with:
          ref: dev
          fetch-depth: 0

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "gradle"

      - name: set current versions.
        run: |
          chmod +x ./gradlew 
          ./gradlew core:setProjectVersion --projectVersion=${{ needs.setup.outputs.current-core-version }} --alias=core 
          ./gradlew adp:setProjectVersion --projectVersion=${{ needs.setup.outputs.current-adp-version }} --alias=adp 
          ./gradlew dp:setProjectVersion --projectVersion=${{ needs.setup.outputs.current-dp-version }} --alias=dp 
          ./gradlew oc:setProjectVersion --projectVersion=${{ needs.setup.outputs.current-oc-version }} --alias=oc 
          ./gradlew sim:setProjectVersion --projectVersion=${{ needs.setup.outputs.current-sim-version }} --alias=sim

      - name: build core
        if: ${{ needs.check-diff.outputs.core-changed == 'true' }}
        run: |
          chmod +x ./gradlew
          ./gradlew core:setProjectVersion --projectVersion=${{ needs.setup.outputs.next-core-version }} --alias=core core:build

      - name: build and publish adp
        if: ${{ needs.check-diff.outputs.adp-changed == 'true' || needs.check-diff.outputs.core-changed == 'true' }}
        run: |
          chmod +x ./gradlew
          ./gradlew adp:setProjectVersion --projectVersion=${{ needs.setup.outputs.next-adp-version }} --alias=adp adp:build

      - name: build and publish dp
        if: ${{ needs.check-diff.outputs.dp-changed == 'true' || needs.check-diff.outputs.adp-changed == 'true' || needs.check-diff.outputs.core-changed == 'true' }}
        run: |
          chmod +x ./gradlew 
          ./gradlew dp:setProjectVersion --projectVersion=${{ needs.setup.outputs.next-dp-version }} --alias=dp dp:build

      - name: build and publish oc
        if: ${{ needs.check-diff.outputs.oc-changed == 'true' || needs.check-diff.outputs.adp-changed == 'true' || needs.check-diff.outputs.core-changed == 'true' }}
        run: |
          chmod +x ./gradlew
          ./gradlew oc:setProjectVersion --projectVersion=${{ needs.setup.outputs.next-oc-version }} --alias=oc oc:build

      - name: build and publish sim
        if: ${{ needs.check-diff.outputs.sim-changed == 'true' || needs.check-diff.outputs.adp-changed == 'true' || needs.check-diff.outputs.core-changed == 'true' }}
        run: |
          chmod +x ./gradlew 
          ./gradlew sim:setProjectVersion --projectVersion=${{ needs.setup.outputs.next-sim-version }} --alias=sim build

  version-updates:
    needs: [build, setup, check-diff]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout version repo.
        uses: actions/checkout@v3
        with:
          ref: version
          fetch-depth: 0

      - uses: Abdullahi127/Custom_Actions/.github/actions/jsonWriter@main
        id: update-core-version
        if: ${{ needs.check-diff.outputs.core-changed == 'true' }}
        with:
          path: "./versions.json"
          key: "core"
          value: "1.0.0"

      - run: |
          echo "versions=${{ steps.update-core-version.outputs.map }}"

      - uses: Abdullahi127/Custom_Actions/.github/actions/jsonWriter@main
        id: update-adp-version
        if: ${{ needs.check-diff.outputs.adp-changed == 'true' || needs.check-diff.outputs.core-changed == 'true' }}
        with:
          path: ./versions.json
          key: adp
          value: ${{ needs.setup.outputs.next-adp-version }}

      - run: |
          echo "versions=${{ steps.update-adp-version.outputs.map }}"

      - uses: Abdullahi127/Custom_Actions/.github/actions/jsonWriter@main
        id: update-dp-version
        if: ${{ needs.check-diff.outputs.dp-changed == 'true' || needs.check-diff.outputs.adp-changed == 'true' || needs.check-diff.outputs.core-changed == 'true' }}
        with:
          path: ./versions.json
          key: dp
          value: ${{ needs.setup.outputs.next-dp-version }}

      - run: |
          echo "versions=${{ steps.update-dp-version.outputs.map }}"

      - uses: Abdullahi127/Custom_Actions/.github/actions/jsonWriter@main
        id: update-oc-version
        if: ${{ needs.check-diff.outputs.oc-changed == 'true' || needs.check-diff.outputs.adp-changed == 'true' || needs.check-diff.outputs.core-changed == 'true' }}
        with:
          path: ./versions.json
          key: oc
          value: ${{ needs.setup.outputs.next-oc-version }}

      - run: |
          echo "versions=${{ steps.update-oc-version.outputs.map }}"

      - uses: Abdullahi127/Custom_Actions/.github/actions/jsonWriter@main
        id: update-sim-version
        if: ${{ needs.check-diff.outputs.sim-changed == 'true' ||  needs.check-diff.outputs.adp-changed == 'true' || needs.check-diff.outputs.core-changed == 'true' }}
        with:
          path: ./versions.json
          key: sim
          value: ${{ needs.setup.outputs.next-sim-version }}

      - run: |
          echo "versions=${{ steps.update-sim-version.outputs.map }}"

      - name: commit changes
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}"
          git add ./versions.json
          git commit -m "Update versions"
          git push

# jobs:
#   versions:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout version repo
#         uses: actions/checkout@v3
#         with:
#           ref: version

#       - name: Current branch.
#         run: |
#           echo "GITHUB_REF: ${GITHUB_REF}"

#       - name: upload json file.
#         uses: actions/upload-artifact@v3
#         with:
#           name: Versions
#           path: ./versions.json
#           retention-days: 1

#   build:
#     needs: versions
#     runs-on: ubuntu-latest
#     steps:
#       - name: checkout dev repo
#         uses: actions/checkout@v3
#         with:
#           ref: dev

#       - name: Current branch.
#         run: |
#           echo "GITHUB_REF: ${GITHUB_REF}"

#       - uses: actions/download-artifact@v3
#         id: download
#         with:
#           name: Versions
#           path: path/to/artifacts

#       - name: Get current version
#         run: |
#           echo ${{steps.download.outputs.download-path}}/versions.json
#           echo "I should be Github Action!"

#       - uses: actions/setup-java@v3
#         with:
#           distribution: temurin
#           java-version: 17

#       - uses: gradle/gradle-build-action@v2
#       - name: Gradle build
#         run: |
#           chmod +x ./gradlew
#           ./gradlew setCurrentVersion --projectVersion=0.10.0 --alias=core clean build

#       - uses: actions/upload-artifact@v3
#         with:
#           name: Package
#           path: build/libs
#           retention-days: 1
